["DeclarationList",
"Declaration DeclarationList",
"",
"DeclarationInitial DeclarationPrime",
"TypeSpecifier ID",
"FunDeclarationPrime",
"VarDeclarationPrime",
";",
"[ NUM ] ;",
"( Params ) CompoundStmt",
"int",
"void",
"int ID ParamPrime ParamList",
"void",
", Param ParamList",
"",
"DeclarationInitial ParamPrime",
"[ ]",
"",
"{ DeclarationList StatementList }",
"Statement StatementList",
"",
"ExpressionStmt",
"CompoundStmt",
"SelectionStmt",
"IterationStmt",
"ReturnStmt",
"Expression ;",
"break ;",
";",
"if ( Expression ) Statement else Statement",
"while ( Expression ) Statement",
"return ReturnStmtPrime",
";",
"Expression ;",
"SimpleExpressionZegond",
"ID B",
"= Expression",
"[ Expression ] H",
"SimpleExpressionPrime",
"= Expression",
"G D C",
"AdditiveExpressionZegond C",
"AdditiveExpressionPrime C",
"Relop AdditiveExpression",
"",
"<",
"==",
"Term D",
"TermPrime D",
"TermZegond D",
"Addop Term D",
"",
"+",
"-",
"SignedFactor G",
"SignedFactorPrime G",
"SignedFactorZegond G",
"* SignedFactor G",
"",
"+ Factor",
"- Factor",
"Factor",
"FactorPrime",
"+ Factor",
"- Factor",
"FactorZegond",
"( Expression )",
"ID VarCallPrime",
"NUM",
"( Args )",
"VarPrime",
"[ Expression ]",
"",
"( Args )",
"",
"( Expression )",
"NUM",
"ArgList",
"",
"Expression ArgListPrime",
", Expression ArgListPrime",
""]